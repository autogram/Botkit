# TODO: https://github.com/marketplace/actions/automatic-releases
name: Build
on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.0.10]
        os: [ubuntu-18.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: "Install Poetry"
        uses: Gr1N/setup-poetry@v3
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: "Initialize package cache"
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry/virtualenvs
#          key: ${{ matrix.os }}-poetry${{ matrix.poetry-version }}-python${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
          key: ${{ matrix.os }}-poetry${{ matrix.poetry-version }}-python${{ matrix.python-version }}
          restore-keys: |
            ${{ matrix.os }}-poetry${{ matrix.poetry-version }}-python${{ matrix.python-version }}

      - name: Poetry install
        run: poetry install --extras "redis hmr"
      # TODO: check for (and manually fix?) outdated lockfile
      - name: Show outdated packages
        run: poetry show --outdated
        continue-on-error: true

      # TODO: Run mypy checks
      - name: Run pre-commit hooks
        run: poetry run pre-commit run --all-files
        continue-on-error: true
      - name: Test with pytest
        # TODO: Somehow report back test results into PR or commit:
        # - https://tryexceptpass.org/article/pytest-github-integration/
        run: poetry run pytest tests/ --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov=botkit --cov-report=xml --cov-report=html
      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: Publish test results to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          file: coverage.xml
          flags: pytest # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
        if: ${{ always() }}
      - name: XUnit Viewer
        id: xunit-viewer
        uses: AutoModality/action-xunit-viewer@v1
        with:
          results: junit/
        if: ${{ matrix.os == 'ubuntu-18.04' }}
      - name: Attach the report
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.xunit-viewer.outputs.report-name }}
          path: ${{ steps.xunit-viewer.outputs.report-dir }}
        if: ${{ matrix.os == 'ubuntu-18.04' }}
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.1
        if: ${{ matrix.os == 'ubuntu-18.04' }}
        with:
          check_name: Unit Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: junit/test-results-${{ matrix.python-version }}.xml
          log_level: DEBUG
